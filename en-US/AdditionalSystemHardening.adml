<?xml version="1.0" encoding="utf-8"?>
<policyDefinitionResources xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" revision="1.0" schemaVersion="1.0" xmlns="http://schemas.microsoft.com/GroupPolicy/2006/07/PolicyDefinitions">
      <displayName>
		Additional system hardening policies
	</displayName>
      <description>
		Additional system hardening policies
	</description>
      <resources>
            <stringTable>
                  <!-- CATEGORIES -->
                  <string id="System">Additional system hardening settings</string>
                  <string id="Adobe">Additional Adobe Acrobat settings</string>
                  <!-- POLICIES -->
                  <!-- System policies -->
                  <string id="RemoteDCOM">Block remote DCOM connections</string>
                  <string id="RemoteDCOM_Explain">If you enable this policy, no remote clients may launch servers or connect to objects on this computer. Local clients cannot access remote DCOM servers; all DCOM traffic is blocked.

If you disable this policy, launching of servers and connecting to objects by remote clients is allowed on a per-class basis according to the value and access permissions of the class's LaunchPermission registry value and the global DefaultLaunchPermission registry value.</string>
                  <string id="LSA_RunAsPPL">Enable additional LSA process hardening</string>
                  <string id="LSA_RunAsPPL_Explain">Enable this option to allow the LSA process to run as a PPL (Protected Process Light), in order to disallow its debugging.</string>
                  <string id="LSA_SamDisableListenOnTCP">Disable the SAM server TCP listener</string>
                  <string id="LSA_SamDisableListenOnTCP_Explain">By default, the SAM server (lsass.exe) is constantly listening on a random TCP port, bound to all network interfaces.

Enabling this policy disables the TCP listener.</string>
                  <string id="SafeBootUserAccess">Disable standard users in Safe Mode</string>
                  <string id="SafeBootUserAccess_Explain">An adversary with standard user credentials who can boot into Microsoft Windows using Safe Mode, Safe Mode with Networking, or Safe Mode with Command Prompt options may be able to bypass system protections and security functionality. To reduce this risk, users with standard credentials should be prevented from using Safe Mode options to log in.

Enabling this policy will prevent standard users from opening a session in Safe Mode.

Disabling this policy will allow standard users to open a session in Safe Mode.</string>
                  <string id="AuthenticodeCertVerification">Enable the strict Authenticode signature verification mechanism</string>
                  <string id="AuthenticodeCertVerification_Explain">The strict Authenticode signature verification mechanism disallows adding extraneous information to the WIN_CERTIFICATE structure.</string>
                  <string id="LoadAppInit_DLLs">Allow custom DLL loading list for application processes</string>
                  <string id="LoadAppInit_DLLs_Explain">The list is located in the registry key HKLM:\Software\Microsoft\Windows NT\CurrentVersion\WindowsAppInit_DLLs</string>
                  <string id="MicroarchHardening">Enable Spectre and Meltdown mitigations</string>
                  <string id="MicroarchHardening_Explain">The FeatureSettingsOverride registry key in Windows, typically found under SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management and often managed alongside FeatureSettingsOverrideMask, provides administrators with granular control over software-based mitigations for CPU speculative execution vulnerabilities like Spectre and Meltdown.

These vulnerabilities can potentially allow unauthorized access to sensitive data. Windows implements various mitigations to counter these threats, but they can sometimes introduce performance overhead. The FeatureSettingsOverride key allows for a tailored approach, enabling administrators to selectively enable or disable specific mitigations—such as those for different variants of Spectre (like v2 or Speculative Store Bypass - SSB) and Meltdown—or even to disable all of them if the performance impact is deemed too high for a particular environment, or to apply specific configurations like disabling Hyper-Threading on Intel CPUs in conjunction with these mitigations.</string>
                  <string id="MicroarchHardening_Option1">Intel and AMD: enable all mitigations</string>
                  <string id="MicroarchHardening_Option2">Intel: enable all mitigations (with Hyper-Threading disabled)</string>
                  <string id="MicroarchHardening_Option3">Intel: enable mitigations for Spectre v2, Meltdown, and SSB</string>
                  <string id="MicroarchHardening_Option4">Intel: enable mitigations for Spectre v2 and Meltdown</string>
                  <string id="MicroarchHardening_Option5">Intel: enable mitigations for Meltdown only</string>
                  <string id="MicroarchHardening_Option6">AMD and ARM: enable mitigations for Spectre v2</string>
                  <string id="MicroarchHardening_Option7">Disable all mitigations</string>
                  <string id="KCET">Enable kernel-level shadow stacks</string>
                  <string id="KCET_Explain">This policy enables kernel-level shadow stacks, also known as Intel CET (Control-flow Enforcement Technology) or AMD Shadow Stack.

Please note that this security function requires specific hardware support (AMD Zen 3 or Intel 11th Gen processors) and OS support (Windows 21H2 or newer).</string>
                  <string id="WPBT">Disable the WPBT functionality</string>
                  <string id="WPBT_Explain">This policy disables the Windows Platform Binary Table (WPBT) functionality, which can be used for persistence through a UEFI implant.</string>
                  <string id="TTD">Disable Time-Travel Debugging</string>
                  <string id="TTD_Explain">This policy disables the Time-Travel Debugging (TTD) functionality, which can be used to dump sensitive process memory content and to launch third-party executables.</string>
                  <string id="CWDIllegalInDllSearch">Remove current working directory from DLL search</string>
                  <string id="CWDIllegalInDllSearch_Explain">The CWDIllegalInDllSearch registry entry is used to remove the current working directory (CWD) from the DLL search order.</string>
                  <string id="SEHOP">Enable Structured Exception Handling Overwrite Protection (SEHOP)</string>
                  <string id="SEHOP_Explain">SEHOP blocks exploits that use the Structured Exception Handling overwrite technique, a common buffer overflow attack.

This policy is only effective on 32-bit systems.</string>
                  <string id="NLA">Enable Network Level Authentication (NLA) for RDP connections</string>
                  <string id="NLA_Explain">This policy enables Network Level Authentication for RDP connections, with the following settings:

- TLS is required for server authentication and link encryption.
- High level of encryption (128-bit) for the data link.
- User authentication is required at connection time.

Disabling this policy does nothing.</string>
                  <string id="LMAuth">Harden network logons and authentication security</string>
                  <string id="LMAuth_Explain">Enable this policy to disable LM and NTLM authentication modes and enable the use of NTLMv2 only.

Disable this policy to restore LM and NTLMv1 capabilities, in addition to NTLMv2.</string>
                  <string id="WDigest">Disable WDigest protocol</string>
                  <string id="WDigest_Explain">Enabling this policy will disable the WDigest protocol, now considered obsolete.

Keeping WDigest enabled could allow an attacker to retrieve plain-text passwords stored in the LSA service with a tool such as Mimikatz, and it is therefore recommended to enable this policy.</string>
                  <string id="Logon">Domain credential caching hardening</string>
                  <string id="Logon_Explain">Enabling this policy modifies two settings related to how the local system handles domain-related credentials:

- Reduce the caching count (2 cached credentials) of domain-related credentials for offline authentication if no domain controller is available
- The delay before the credentials are cleared from memory after a logoff is set to 30 seconds.

These settings reduce the exposure time of credentials to attack tools such as Mimikatz.

NOTE: These settings can prevent a new session opening if the network is not available or if a domain controller is not reachable.</string>
                  <string id="ASLR">Force the randomization of relocatable images (ASLR)</string>
                  <string id="ASLR_Explain">Enabling this policy will enable ASLR even for relocatable images that do not explicitly expose this capability.

Disabling this policy will explicitly disable the ASLR mechanism.</string>
                  <string id="User32_Exception">Additional registry fix for CVE-2015-6161</string>
                  <string id="User32_Exception_Explain">Enable this policy to change the registry value FEATURE_ALLOW_USER32_EXCEPTION_HANDLER_HARDENING to 1.

This modification is necessary to fully fix an ASLR bypass vulnerability (CVE-2015-6161). For more information, refer to the MS15-124 security bulletin (https://docs.microsoft.com/en-us/security-updates/SecurityBulletins/2015/ms15-124).</string>
                  <string id="Info_Disclosure">Additional registry fix for CVE-2017-8529</string>
                  <string id="Info_Disclosure_Explain">Enable this policy to change the registry value FEATURE_ENABLE_PRINT_INFO_DISCLOSURE_FIX to 1.

This modification is necessary to fully fix an information disclosure vulnerability in Microsoft browsers (CVE-2017-8529). For more information, refer to the related security update guide (https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2017-8529).</string>
                  <string id="MSCacheV2_Iteration">Number of PBKDF2 iterations for cached logon credential hashing</string>
                  <string id="MSCacheV2_Iteration_Explain">For domain logons, if credential caching is enabled, credentials are stored as MSCacheV2 hashes, derived using the PBKDF2-SHA1 hashing algorithm.

The number of iterations for the PBKDF2-SHA1 algorithm used for hashing operations can be controlled with this policy, with the following logic:

- For a value lower than or equal to 10240, the setting acts as a 1024-multiplier (for example, setting it to 20 will result in 20480 iterations).
- For a value greater than 10240, the setting acts as the chosen value (modulo 1024).

The recommended value depends on the target environment, the CPU power available, and the performance hit you are willing to tolerate at logon (a high value can incur a net performance penalty for the logon process).

When the policy is enabled, the default value configured is 1954 (2,000,896 rounds). This is the recommended value (as of December 2022) for the PBKDF2-HMAC-SHA1 algorithm, considering the compute power of an RTX 4090 GPU in an offline brute-force attack model.

More information:
- https://tobtu.com/minimum-password-settings/
- https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html#pbkdf2</string>
                  <string id="PSLockDownPolicy">Enable PowerShell Constrained Language Mode</string>
                  <string id="PSLockDownPolicy_Explain">Enable the Constrained Language Mode for PowerShell. This mode disallows several language elements that can be leveraged by attackers to perform sensitive API calls.
      
NOTE: Since this policy only rewrites the __PSLockdownPolicy environment variable, this is not a secure way to enable CLM and is intended for defense-in-depth only. CLM can only be securely enforced by AppLocker and/or WDAC.</string>
                  <string id="AdminShare_Wks">Disable administrative shares for workstations</string>
                  <string id="AdminShare_Wks_Explain">Not recommended, except for highly secure environments.</string>
                  <string id="AdminShare_Srv">Disable administrative shares for servers</string>
                  <string id="AdminShare_Srv_Explain">Not recommended, except for highly secure environments.</string>
                  <string id="Pol_SecGuide_PrintDriver">Limits print driver installation to Administrators</string>
                  <string id="Pol_SecGuide_PrintDriver_Help">Determines whether users who are not Administrators can install print drivers on this computer.

By default, users who are not Administrators cannot install print drivers on this computer.

If you enable this setting or do not configure it, print driver installation will be limited to Administrators on this computer.

If you disable this setting, users who are not Administrators will also be able to install print drivers on this computer.

Additional information: https://support.microsoft.com/en-us/topic/kb5005010-restricting-installation-of-new-printer-drivers-after-applying-the-july-6-2021-updates-31b91c02-05bc-4ada-a7ea-183b129578a7</string>
                  <string id="ProtectedRoots">Prevent standard users from installing root certificates</string>
                  <string id="ProtectedRoots_Help">This policy prevents standard (non-administrator) users from installing root certificate authorities to their user-specific trust store.

Enabling this policy can help prevent code signing certificate cloning attacks. It is recommended to enable this policy.</string>
                  <string id="AcrobatAI">Enable Generative AI features in Acrobat and Acrobat Reader</string>
                  <string id="AcrobatAI_Help">The generative AI features in Acrobat and Acrobat Reader are turned on by default. This policy controls the state of the feature.

Enabling this policy will enable the Generative AI feature.

Disabling this policy will disable the Generative AI feature. For privacy purposes, it is recommended to set this policy to Disabled.</string>
                  <string id="BlackLotusMitigation">Enable Secure Boot and Code Integrity mitigations for BlackLotus (CVE-2023-24932)</string>
                  <string id="BlackLotusMitigation_Help">This policy sets the registry keys needed to apply the updated Secure Boot denylist (DBX), the new signing certificate in the allowlist (DB), the anti-rollback mechanism (SVN), and the Code Integrity Boot Policy, to prevent untrusted/vulnerable Windows boot managers from loading when Secure Boot is turned on.

IMPORTANT: Carefully read the Microsoft documentation associated with this protection, as it can render your device unable to boot if you do not follow the required preliminary steps:

- https://support.microsoft.com/en-us/topic/kb5025885-how-to-manage-the-windows-boot-manager-revocations-for-secure-boot-changes-associated-with-cve-2023-24932-41a975df-beb2-40c1-99a3-b3ff139f832d
- https://msrc.microsoft.com/update-guide/vulnerability/CVE-2023-24932

In particular, you should read all the step descriptions present in the list and the associated manual operations you need to perform (reboots, additional checks, etc.) for each of them in the documentation section:

- https://support.microsoft.com/en-us/topic/kb5025885-how-to-manage-the-windows-boot-manager-revocations-for-secure-boot-changes-associated-with-cve-2023-24932-41a975df-beb2-40c1-99a3-b3ff139f832d#bkmk_mitigation_guidelines</string>
                  <string id="BlackLotusMitigation_Option1">Step 1: add the "Windows UEFI CA 2023" certificate to the DB</string>
                  <string id="BlackLotusMitigation_Option2">Step 2: update the boot manager of the device</string>
                  <string id="BlackLotusMitigation_Option3">Step 3: add the "Windows Production CA 2011" certificate to the revocation list (DBX)</string>
                  <string id="BlackLotusMitigation_Option4">Step 4: apply the SVN update to the firmware</string>
                  <string id="SudoCommand">Configure the Windows Sudo command behavior</string>
                  <string id="SudoCommand_Help">This policy configures the behavior of the Sudo command introduced in Windows 11 24H2.
      
Possible choices are:

- Force a new elevated window to open (default behavior)
- Disable inputs to the elevated process
- Run in the current window
- Disable the functionality

It is recommended to use the default behavior and let the Sudo command open a new elevated window.</string>
                  <string id="SudoCommand_Option1">Force a new elevated window</string>
                  <string id="SudoCommand_Option2">Disable inputs</string>
                  <string id="SudoCommand_Option3">Run in the current window</string>
                  <string id="SudoCommand_Option4">Disable the functionality</string>
                  <string id="MandatoryVBS">Enable Virtualization-Based Security in Mandatory mode</string>
                  <string id="MandatoryVBS_Explain">This policy enables the Virtualization-Based Security (VBS) function in Mandatory mode.

Mandatory mode is a new functionality introduced to prevent the Windows Downdate attack (and other related downgrading attacks) by forcing the verification of the components of the Secure Kernel and the hypervisor at boot time. Consequently, enabling this functionality can lead to boot failure (and a denial of service) in case of a modification of a core component of the Secure Kernel, hypervisor, or a related dependent module.

NOTE: if you already have Virtualization-Based Security enabled with UEFI Lock, this setting will not do anything, as the VBS configuration is already written and locked in a UEFI variable. This variable needs to be deleted using the bcdedit.exe tool before deploying the Mandatory flag and the UEFI Lock. Guidance and more information about this procedure are available here:

https://learn.microsoft.com/en-us/windows/security/identity-protection/credential-guard/configure?tabs=reg#disable-virtualization-based-security

Enabling this policy will set the Mandatory flag and force the verification of the VBS components at boot time.

Enabling this policy with UEFI Lock already enabled will do nothing.

Disabling this policy will disable the verification of the components, only if the UEFI Lock is not enabled. Otherwise, disabling this policy will do nothing.</string>
                  <string id="CoInstallers">Block driver co-installers</string>
                  <string id="CoInstallers_Help">A co-installer is a user-mode Win32 DLL that typically writes additional configuration information to the registry or performs other installation tasks that require information not available when an INF is written.

If you enable this setting, co-installer execution will be prevented, and additional configuration software for specific devices (mouse devices, gaming keyboards, etc.) must be downloaded and manually installed from the manufacturer's website.

If you disable this setting, co-installer execution will be permitted, which is a significant security risk (potentially dangerous code execution).</string>
            </stringTable>
            <presentationTable>
                  <presentation id="MSCacheV2_Iteration">
                        <decimalTextBox refId="MSCacheV2_Iteration_count" defaultValue="1954">Number of PBKDF2 rounds:</decimalTextBox>
                  </presentation>
                  <presentation id="MicroarchHardening_Presentation">
                        <dropdownList refId="MicroarchHardening_DropdownList" noSort="true" defaultItem="1">Select an option:</dropdownList>
                        <checkBox refId="HyperVMitigations">Enable Hyper-V mitigations for virtual machines below version 8.0</checkBox>
                  </presentation>
                  <presentation id="BlackLotusMitigation_Presentation">
                        <dropdownList refId="BlackLotusMitigation_DropdownList" noSort="true" defaultItem="0">Select a step:</dropdownList>
                  </presentation>
                  <presentation id="SudoCommand_Presentation">
                        <dropdownList refId="SudoCommand_DropdownList" noSort="true" defaultItem="0">Select an option:</dropdownList>
                  </presentation>
            </presentationTable>
      </resources>
</policyDefinitionResources>